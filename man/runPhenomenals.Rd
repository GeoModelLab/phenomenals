% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RunPhenomenals.R
\name{runPhenomenals}
\alias{runPhenomenals}
\title{Run phenomenals}
\usage{
runPhenomenals(
  weather_data,
  target_data,
  phenomenalsParameters,
  start_year = 2000,
  end_year = 2025,
  sites = "all",
  varieties = "all",
  timestep = "daily",
  target_traits = c("yield"),
  rolling_window = 5,
  evaluation_range = list(c(0, 200)),
  multicollinearity_threshold = 0.8,
  max_phenomenals = 4,
  bin_size = 1
)
}
\arguments{
\item{weather_data}{A data frame containing hourly weather data. Must include the following columns: \code{Latitude}, \code{Longitude}, \code{DateTime} (as POSIXct or character), \code{Temperature} (°C), \code{Precipitation} (mm), \code{RelativeHumidity} (\%), \code{Radiation} (MJ/m²), and \code{WindSpeed} (m/s).}

\item{target_data}{A data frame containing the target data (e.g., yield, brix, berry number, malic acid). The dataframe must include: \code{Site}, \code{Latitude}, \code{Longitude}, \code{Variety}, \code{Year}, \code{Variable}, \code{Value}, and \code{Unit}.}

\item{phenomenalsParameters}{A nested list of model parameters (usually loaded from \code{phenomenals::phenomenalsParameters}), structured as \code{list[species][[class]][[parameter]]}, where each parameter is a list with:
\itemize{
\item \code{min}: Minimum calibration value (numeric)
\item \code{max}: Maximum calibration value (numeric)
\item \code{value}: Default value used in simulation (numeric)
\item \code{calibration}: Logical; \code{TRUE} if the parameter is subject to calibration
}

You can start with \code{phenomenals::phenomenalsParameters} and modify it as needed. This list will be automatically converted to the CSV format required by the C# executable.}

\item{start_year}{The first year of the simulation or calibration period (numeric, default is 2000).}

\item{end_year}{The last year of the simulation or calibration period (numeric, default is 2025).}

\item{sites}{A character vector of site names (e.g., \code{"ColliOrientali"}).}

\item{varieties}{A character vector of variety names to include in the calibration (default: \code{"all"}).}

\item{timestep}{Time step of the input weather data; must be \code{"daily"} (default) or \code{"hourly"}.}

\item{target_traits}{The target traits on which applying the phenomenals (default is \code{"yield"}).}

\item{rolling_window}{The window pane size for phenomenals smoothing (default is 5 days).}

\item{evaluation_range}{A list of numeric vectors specifying the percentage range of the plant cycle to compute phenomenals (0–200; 0–100 = dormancy, 101–200 = growing season). (default is \code{list(c(0,200))})}

\item{multicollinearity_threshold}{The threshold to consider phenomenals multicorrelations on each unit of cycle percentage (default is 0.8).}

\item{max_phenomenals}{The maximum number of phenomenals to retain (default is 4).}

\item{bin_size}{The range of cycle percentage to aggregate phenomenals (default is 1).}
}
\value{
A named list with three components:
\describe{
\item{data}{Raw and processed phenological signals}
\item{selection}{Results from signal selection (correlation, multicollinearity, stepwise)}
\item{results}{Model diagnostics, predictions, coefficients, and variable importance}
}
}
\description{
This function runs the Phenomenals method by passing weather data and target traits (e.g., yield, Brix, sugar) directly from R to the underlying C# executable.
Users do not need to manage configuration files or binaries manually. All paths and execution logic are handled internally, and only core settings are exposed.
}
\examples{
\dontrun{
result <- phenologyCalibration(
  weather_data = colliOrientali,
  target_data = targetSample,
  phenomenalsParameters,
  start_year = 2010,
  end_year = 2020,
  sites = "ColliOrientali",
  varieties = "Merlot",
  timestep = 'daily',
  rolling_window = 5,
  target_traits = c('yield'),
  evaluation_range = list(c(0,400)),
  multicollinearity_threshold=0.8,
  max_phenomenals=4,
  bin_size=1)
head(result$phenomenals$processed)
}

}
